# OneBookNav Docker Compose Configuration
# Supports both development and production environments

version: '3.8'

services:
  # Main application service
  onebooknav:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: onebooknav
    restart: unless-stopped
    ports:
      - "3080:80"
    volumes:
      # Persistent data
      - onebooknav_data:/var/www/html/data
      # Optional: mount config for easy editing
      - ./config/config.php:/var/www/html/config/config.php:ro
    environment:
      - SITE_TITLE=OneBookNav
      - SITE_URL=http://localhost:3080
      - DB_TYPE=sqlite
      - DEBUG_MODE=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - onebooknav_network

  # Optional: Redis cache for better performance
  redis:
    image: redis:7-alpine
    container_name: onebooknav_redis
    restart: unless-stopped
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis_data:/data
    networks:
      - onebooknav_network
    profiles:
      - with-cache

  # Optional: MySQL database for production use
  mysql:
    image: mysql:8.0
    container_name: onebooknav_mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=onebooknav
      - MYSQL_USER=onebooknav
      - MYSQL_PASSWORD=onebooknav
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - onebooknav_network
    profiles:
      - with-mysql

  # Optional: Nginx reverse proxy for SSL termination
  nginx-proxy:
    image: nginx:alpine
    container_name: onebooknav_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ssl_certs:/etc/nginx/ssl:ro
    depends_on:
      - onebooknav
    networks:
      - onebooknav_network
    profiles:
      - with-proxy

  # Development service with hot reload
  onebooknav-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: onebooknav_dev
    restart: unless-stopped
    ports:
      - "3080:80"
      - "9003:9003"  # XDebug port
    volumes:
      # Mount source code for development
      - .:/var/www/html
      # Persistent data
      - onebooknav_dev_data:/var/www/html/data
    environment:
      - SITE_TITLE=OneBookNav Dev
      - SITE_URL=http://localhost:3080
      - DB_TYPE=sqlite
      - DEBUG_MODE=true
      - LOG_LEVEL=DEBUG
    networks:
      - onebooknav_network
    profiles:
      - development

volumes:
  onebooknav_data:
    driver: local
  onebooknav_dev_data:
    driver: local
  redis_data:
    driver: local
  mysql_data:
    driver: local
  ssl_certs:
    driver: local

networks:
  onebooknav_network:
    driver: bridge

# Usage examples:
#
# Production with SQLite:
# docker-compose up -d
#
# Production with MySQL:
# docker-compose --profile with-mysql up -d
#
# Production with Redis cache:
# docker-compose --profile with-cache up -d
#
# Production with full stack (MySQL + Redis + SSL Proxy):
# docker-compose --profile with-mysql --profile with-cache --profile with-proxy up -d
#
# Development mode:
# docker-compose --profile development up -d